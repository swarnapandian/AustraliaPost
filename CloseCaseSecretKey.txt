global class CloseCaseSecretKey Implements Database.batchable<sObject>, Database.AllowsCallouts, Schedulable {
	public Database.QueryLocator start(Database.BatchableContext BC){
       
      return Database.getQueryLocator('SELECT Id, ClosedDate FROM Case  Where  IsClosed = true AND SecreteKey__c = null');
    }
    public void execute(Database.BatchableContext BC, List<Case> caseList){
		Map<Id, Case> caseIdVsCaseMap = new Map<Id, Case>();
		for(Case caseObj : caseList){
			HttpRequest req = new HttpRequest();
            HttpResponse response = new HttpResponse();
            Http http = new Http();
            req.setHeader('Content-Type', 'application/json');
            req.setEndpoint('https://nfapihub.herokuapp.com/');
            req.setMethod('POST');
            req.setBody('{"id": caseObj.id ,"agentid": caseObj.OwnerId}');
            req.setCompressed(true);
                  
            		response = http.send(req);
                	String sJson = response.getBody();
                	System.debug('Str:' + response.getBody());
                    if (response.getStatusCode() == 200){
                    Map<String, Object> results = (Map<String, Object>) JSON.deserializeUntyped(response.getBody());
                    String secretKey = (String)results.get('secretKey');
                    caseObj.SecreteKey__c = secretKey;
                    caseIdVsCaseMap.put(caseObj.id, caseObj); 
                    }
			}
        if(caseIdVsCaseMap.keySet().size()>0){
        update caseIdVsCaseMap.Values();
        }
    }
public void finish(Database.BatchableContext BC){
    	Messaging.SingleEmailMessage mail = new Messaging.SingleEmailMessage();
         //AsyncApexJob a = [Select a.TotalJobItems, a.Status, a.NumberOfErrors, a.JobType, a.JobItemsProcessed, a.ExtendedStatus, a.CreatedById, a.CompletedDate From AsyncApexJob a WHERE id = :BC.getJobId()];
    	List<String> emailAdd = new List<String>{'swarnapandian@gmail.com'};
    	AsyncApexJob a = [Select ApexClassId, JobType, TotalJobItems, JobItemsProcessed,  NumberofErrors, Status, CompletedDate from AsyncApexJob where Id =: bc.getJobId()];
        mail.setToAddresses(emailAdd);
        mail.setReplyTo('test@test.com');//Add here your email address
        mail.setSenderDisplayName('Workforce Management Processing Module');
        mail.setSubject('Batch Processing '+a.Status);
        mail.setPlainTextBody('The Batch Apex job processed' + a.TotalJobItems+'batches with '+a.NumberOfErrors+'failures'+'Job Item processed are'+a.JobItemsProcessed);
        Messaging.sendEmail(new Messaging.Singleemailmessage [] {mail});
}

global void execute (SchedulableContext ctx){
        CloseCaseSecretKey cc = new CloseCaseSecretKey ();
        Database.executeBatch(cc);
    }
 }